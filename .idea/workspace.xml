<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="25897d84-fc90-4bcb-89b5-b5fee4434c4e" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/gardenPlannerApi.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/controller.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/plant_companion_service.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/plant_repository.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data_loader/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data_loader/data/companionplants-20240117.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data_loader/data/companionplants.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data_loader/data/sources.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data_loader/load_plant_data.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/migrations.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model/dto.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model/plant.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/neo4j_driver_manager.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/conftest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/api/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/api/test_controller.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/conftest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/unit/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/unit/api/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/unit/api/test_plant_companion_service.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/unit/conftest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/testplants" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Flask Main" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/.venv/lib/python3.10/site-packages/pymongo/uri_parser.py" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2aoyejduYoNHhYW2nPZwTZBedfS" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;Docker.docker-compose.yml.mongo: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.neo4j: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Flask server.Flask (api/app.py).executor&quot;: &quot;Run&quot;,
    &quot;Flask server.Flask (app.py).executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for .executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for controller.test_generate_companion_boxes.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for plant_companion_service.test_generate_plant_boxes.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in api.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test.executor&quot;: &quot;Run&quot;,
    &quot;Python.app.executor&quot;: &quot;Run&quot;,
    &quot;Python.gardendataloader.executor&quot;: &quot;Debug&quot;,
    &quot;Python.gardendatamunging.executor&quot;: &quot;Run&quot;,
    &quot;Python.load_plant_data.executor&quot;: &quot;Run&quot;,
    &quot;Python.mongo_config.executor&quot;: &quot;Debug&quot;,
    &quot;Python.plant_companion_service.executor&quot;: &quot;Run&quot;,
    &quot;Python.plant_repository.executor&quot;: &quot;Debug&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;database.data.extractors.current.export.id&quot;: &quot;Comma-separated (CSV)_id&quot;,
    &quot;database.data.extractors.current.id&quot;: &quot;Comma-separated (CSV)_id&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;advanced.settings&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [
      &quot;Python&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/test/unit" />
      <recent name="$PROJECT_DIR$/data_loader/data" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/api" />
      <recent name="$PROJECT_DIR$/data_loader/model" />
    </key>
  </component>
  <component name="RunManager" selected="Python.load_plant_data">
    <configuration name="app" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="gardenPlannerApi" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/app.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="load_plant_data" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="gardenPlannerApi" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_loader" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/data_loader/load_plant_data.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="gardenPlannerApi" type="Python.FlaskServer">
      <module name="gardenPlannerApi" />
      <option name="target" value="$PROJECT_DIR$/api/controller.py" />
      <option name="targetType" value="PATH" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test.integration.api.test_controller.test_generate_companion_boxes" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="gardenPlannerApi" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test.integration.api.test_controller.test_generate_companion_boxes&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in test" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="gardenPlannerApi" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/test&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Flask server.gardenPlannerApi" />
      <item itemvalue="Python.load_plant_data" />
      <item itemvalue="Python.app" />
      <item itemvalue="Python tests.Python tests for test.integration.api.test_controller.test_generate_companion_boxes" />
      <item itemvalue="Python tests.Python tests in test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.load_plant_data" />
        <item itemvalue="Python.app" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Python tests.Python tests in test" />
        <item itemvalue="Python tests.Python tests for test.integration.api.test_controller.test_generate_companion_boxes" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-67fca87a943a-c986f194a52a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.11799.259" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="25897d84-fc90-4bcb-89b5-b5fee4434c4e" name="Changes" comment="" />
      <created>1704999324525</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1704999324525</updated>
      <workItem from="1704999328403" duration="178000" />
      <workItem from="1704999514789" duration="10594000" />
      <workItem from="1705076400696" duration="702000" />
      <workItem from="1705077109633" duration="23328000" />
      <workItem from="1705437063878" duration="10292000" />
      <workItem from="1705520132214" duration="7731000" />
      <workItem from="1705535212430" duration="6218000" />
      <workItem from="1705586920932" duration="7266000" />
      <workItem from="1705680443520" duration="20490000" />
      <workItem from="1705709112213" duration="346000" />
      <workItem from="1705955889226" duration="1799000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.cypher" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/gardenPlannerApi$Flask__api_app_py_.coverage" NAME="Flask (api/app.py) Coverage Results" MODIFIED="1705689022634" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/gardenPlannerApi$Flask__app_py_.coverage" NAME="Flask (app.py) Coverage Results" MODIFIED="1705703716178" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/gardenPlannerApi$.coverage" NAME=" Coverage Results" MODIFIED="1705704236078" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test" />
    <SUITE FILE_PATH="coverage/gardenPlannerApi$app.coverage" NAME="app Coverage Results" MODIFIED="1705957566948" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/gardenPlannerApi$gardendatamunging.coverage" NAME="load_plant_data Coverage Results" MODIFIED="1705098125108" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/gardenPlannerApi$gardendataloader.coverage" NAME="gardendatamunging Coverage Results" MODIFIED="1705010616783" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/gardenPlannerApi$plant_companion_service.coverage" NAME="plant_companion_service Coverage Results" MODIFIED="1705686370918" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/gardenPlannerApi$plant_repository.coverage" NAME="plant_repository Coverage Results" MODIFIED="1705448964401" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/api" />
    <SUITE FILE_PATH="coverage/gardenPlannerApi$mongo_config.coverage" NAME="mongo_config Coverage Results" MODIFIED="1705005553159" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/gardenPlannerApi$load_plant_data.coverage" NAME="load_plant_data Coverage Results" MODIFIED="1705957624151" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/data_loader" />
  </component>
</project>